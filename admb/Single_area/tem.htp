#if !defined(_TEM_)
#  define _TEM_

class model_data : public ad_comm{
  ofstream *   pad_evalout;
  data_int nareas;
  data_int SrType;
  data_int styr_rec_est;
  data_int endyr_rec_est;
  int nrecs_est;
  data_int rec_like_type;
  data_int ph_Fdev;
  data_int ph_avg_F;
  data_int ph_recdev;
  data_int ph_fish_sel;
  data_int ph_fish4_sel;
  data_int ph_srv1_sel;
  data_number mprior;
  data_number cvmprior;
  data_int ph_m;
  data_number sigrprior;
  data_number cvsigrprior;
  data_int ph_sigr;
  data_number q_srv1prior;
  data_number cvq_srv1prior;
  data_int ph_q_srv1;
  data_number q_srv2prior;
  data_number cvq_srv2prior;
  data_int ph_q_srv2;
  data_number q_srv5prior;
  data_number cvq_srv5prior;
  data_int ph_q_srv5;
  data_number q_srv6prior;
  data_number cvq_srv6prior;
  data_int ph_q_srv6;
  data_number q_srv8prior;
  data_number cvq_srv8prior;
  data_int ph_q_srv8;
  data_number wt_ssqcatch_fish1;
  data_number wt_ssqcatch_fish3;
  data_number wt_srv3;
  data_number wt_srv4;
  data_number wt_srv5;
  data_number wt_srv6;
  data_number wt_fish1_age;
  data_number wt_srv1_age;
  data_number wt_srv2_age;
  data_number wt_fish1_size;
  data_number wt_srv1_size;
  data_number wt_fish2_size;
  data_number wt_srv2_size;
  data_number wt_fish3_size;
  data_number wt_fish4_size;
  data_number wt_srv5_size;
  data_number wt_fish6_size;
  data_number wt_srv6_size;
  data_number wt_rec_var;
  data_number wt_sel_reg_fish3;
  data_number wt_sel_dome_fish3;
  data_number wt_fmort_reg;
  data_number hist_hal_prop;
  data_number ph_ifq;
  data_number ph_srv2q;
  data_number yieldratio;
  data_int projyrs;
  data_int styr;
  data_int endyr;
  data_int recage;
  data_int nages;
  data_int nlenbins;
  data_vector len_bin_labels;
  int styr_rec;
  int endyr_rec;
  int nyrs;
  dvector yy;
  dvector aa;
  int ph_F40;
  data_number spawn_fract;
  data_vector p_mature;
  data_vector wt_m;
  data_vector wt_f;
  dvector wt_mature;
  data_int nyrs_obscatch;
  data_vector obs_catch_fish1;
  data_vector obs_catch_fish3;
  data_number nyrs_srv3;
  data_ivector yrs_srv3;
  data_vector obs_srv3_biom;
  data_vector obs_srv3_se;
  data_vector obs_srv3_lci;
  data_vector obs_srv3_uci;
  data_int nyrs_srv4;
  data_ivector yrs_srv4;
  data_vector obs_srv4_biom;
  data_vector obs_srv4_se;
  data_vector obs_srv4_lci;
  data_vector obs_srv4_uci;
  data_int nyrs_srv5;
  data_ivector yrs_srv5;
  data_vector obs_srv5_biom;
  data_vector obs_srv5_se;
  data_vector obs_srv5_lci;
  data_vector obs_srv5_uci;
  data_int nyrs_srv6;
  data_ivector yrs_srv6;
  data_vector obs_srv6_biom;
  data_vector obs_srv6_se;
  data_vector obs_srv6_lci;
  data_vector obs_srv6_uci;
  data_int nyrs_fish1_age;
  data_ivector yrs_fish1_age;
  data_vector nsamples_fish1_age;
  data_matrix oac_fish1;
  data_int nyrs_srv1_age;
  data_ivector yrs_srv1_age;
  data_vector nsamples_srv1_age;
  data_matrix oac_srv1;
  data_int nyrs_fish1_size;
  data_ivector yrs_fish1_size;
  data_vector nsamples_fish1_size;
  data_matrix osc_fish1_m;
  data_matrix osc_fish1_f;
  data_int nyrs_fish3_size;
  data_ivector yrs_fish3_size;
  data_vector nsamples_fish3_size;
  data_matrix osc_fish3_m;
  data_matrix osc_fish3_f;
  data_int nyrs_srv1_size;
  data_ivector yrs_srv1_size;
  data_vector nsamples_srv1_size;
  data_matrix osc_srv1_m;
  data_matrix osc_srv1_f;
  data_int nyrs_srv2_size;
  data_ivector yrs_srv2_size;
  data_vector nsamples_srv2_size;
  data_matrix osc_srv2_m;
  data_matrix osc_srv2_f;
  data_matrix sizeage_m;
  data_matrix sizeage_f;
  data_matrix sizeage_all;
  data_matrix sizeage_m_new;
  data_matrix sizeage_f_new;
  data_matrix ageage;
  data_number eof;
  int iyr;
  int i;
  int j;
  int ii;
  int l;
  int k;
  int itmp;
  dvector offset;
  ~model_data();
  model_data(int argc,char * argv[]);
  friend class model_parameters;
};

class model_parameters : public model_data ,
  public function_minimizer
{
public:
  ~model_parameters();
  void preliminary_calculations(void);
  void set_runtime(void);
  virtual void * mycast(void) {return (void*)this;}
  static int mc_phase(void)
  {
    return initial_params::mc_phase;
  }
  static int mceval_phase(void)
  {
    return initial_params::mceval_phase;
  }
  static int sd_phase(void)
  {
    return initial_params::sd_phase;
  }
  static int current_phase(void)
  {
    return initial_params::current_phase;
  }
  static int last_phase(void)
  {
    return (initial_params::current_phase
      >=initial_params::max_number_phases);
  }
  static prevariable current_feval(void)
  {
    return *objective_function_value::pobjfun;
  }
private:
  ivector integer_control_flags;
  dvector double_control_flags;
  param_init_number log_q_srv1;
  param_init_number log_q_srv2;
  param_init_number log_q_srv5;
  param_init_number log_q_srv6;
  param_init_number log_q_srv8;
  param_init_bounded_number logm;
  param_init_bounded_number log_mean_rec;
  param_init_bounded_number sigr;
  param_init_bounded_number log_a50_fish1_f;
  param_init_bounded_number log_delta_fish1_f;
  param_number a50_fish1_f;
  param_number delta_fish1_f;
  param_vector fish1_sel_f;
  param_init_bounded_number log_a50_fish1_m;
  param_init_bounded_number log_delta_fish1_m;
  param_number a50_fish1_m;
  param_number delta_fish1_m;
  param_vector fish1_sel_m;
  param_init_bounded_number log_a50_fish2;
  param_init_bounded_number log_delta_fish2;
  param_number a50_fish2;
  param_number delta_fish2;
  param_vector fish2_sel;
  param_init_bounded_number log_a50_fish3_f;
  param_init_bounded_number log_delta_fish3_f;
  param_number a50_fish3_f;
  param_number delta_fish3_f;
  param_vector log_fish3_sel_f;
  param_vector fish3_sel_f;
  param_init_bounded_number log_a50_fish3_m;
  param_init_bounded_number log_delta_fish3_m;
  param_number a50_fish3_m;
  param_number delta_fish3_m;
  param_vector log_fish3_sel_m;
  param_vector fish3_sel_m;
  param_init_bounded_number log_a50_fish4_f;
  param_init_bounded_number log_delta_fish4_f;
  param_number a50_fish4_f;
  param_number delta_fish4_f;
  param_vector fish4_sel_f;
  param_init_bounded_number log_a50_fish4_m;
  param_init_bounded_number log_delta_fish4_m;
  param_number a50_fish4_m;
  param_number delta_fish4_m;
  param_vector fish4_sel_m;
  param_init_bounded_number log_a50_srv1_f;
  param_init_bounded_number log_delta_srv1_f;
  param_number a50_srv1_f;
  param_number delta_srv1_f;
  param_vector log_srv1_sel_f;
  param_vector srv1_sel_f;
  param_init_bounded_number log_a50_srv1_m;
  param_init_bounded_number log_delta_srv1_m;
  param_number a50_srv1_m;
  param_number delta_srv1_m;
  param_vector log_srv1_sel_m;
  param_vector srv1_sel_m;
  param_init_bounded_number log_a50_srv2_f;
  param_init_bounded_number log_delta_srv2_f;
  param_number a50_srv2_f;
  param_number delta_srv2_f;
  param_vector log_srv2_sel_f;
  param_vector srv2_sel_f;
  param_init_bounded_number log_a50_srv2_m;
  param_init_bounded_number log_delta_srv2_m;
  param_number a50_srv2_m;
  param_number delta_srv2_m;
  param_vector log_srv2_sel_m;
  param_vector srv2_sel_m;
  param_init_bounded_number log_avg_F_fish1;
  param_init_bounded_vector log_F_devs_fish1;
  param_init_bounded_number log_avg_F_fish3;
  param_init_bounded_vector log_F_devs_fish3;
  param_vector Fmort_fish1;
  param_vector Fmort_fish3;
  param_matrix Z_f;
  param_matrix Z_m;
  param_matrix F_fish1_f;
  param_matrix F_fish1_m;
  param_matrix F_fish3_f;
  param_matrix F_fish3_m;
  param_matrix S_f;
  param_matrix S_m;
  param_matrix S_f_mid;
  param_matrix S_m_mid;
  param_init_bounded_dev_vector log_rec_dev;
  param_matrix natage_f;
  param_matrix natage_m;
  param_matrix catage_fish1_f;
  param_matrix catage_fish1_m;
  param_vector pred_catch_fish1;
  param_matrix catage_fish3_f;
  param_matrix catage_fish3_m;
  param_vector pred_catch_fish3;
  param_stddev_vector pred_srv3;
  param_vector pred_srv4;
  param_stddev_vector pred_srv5;
  param_vector pred_srv6;
  param_matrix eac_fish1;
  param_matrix eac_srv1;
  param_matrix esc_fish1_m;
  param_matrix esc_fish1_f;
  param_matrix esc_fish3_m;
  param_matrix esc_fish3_f;
  param_matrix esc_srv1_m;
  param_matrix esc_srv1_f;
  param_matrix esc_srv2_m;
  param_matrix esc_srv2_f;
  param_stddev_vector tot_biom;
  param_number q_srv1;
  param_number q_srv2;
  param_number q_srv5;
  param_number q_srv6;
  param_number q_srv8;
  param_stddev_vector pred_rec;
  param_number avg_rec;
  param_number spbiom_trend;
  param_number Depletion;
  param_stddev_vector spawn_biom;
  param_number natmort;
  param_init_bounded_number mF40;
  param_init_bounded_number mF35;
  param_stddev_number F40;
  param_number F35;
  param_number SB0;
  param_number SBF40;
  param_number SBF35;
  param_number sprpen;
  param_matrix Nspr;
  param_number hist_hal_F;
  param_vector surv_like;
  param_vector age_like;
  param_number rec_like;
  param_number ssqcatch;
  param_number F_mort_regularity;
  param_number avg_sel_penalty;
  param_vector priors;
  param_number Like;
  param_number prior_function_value;
  param_number likelihood_function_value;
  objective_function_value obj_fun;
  param_vector pred_catch;
  param_number fratio;
  param_matrix N_proj_f;
  param_matrix N_proj_m;
  param_number FABC_proj;
  param_vector FABC_tot_proj_f;
  param_vector FABC_tot_proj_m;
  param_number FOFL_proj;
  param_vector FOFL_tot_proj_f;
  param_vector FOFL_tot_proj_m;
  param_stddev_number ABC;
  param_stddev_number B40;
  param_number OFL;
  param_vector Z_proj_f;
  param_vector Z_proj_m;
  param_vector ZOFL_proj_f;
  param_vector ZOFL_proj_m;
  param_vector S_proj_f;
  param_vector S_proj_m;
  param_matrix catage_proj_f;
  param_matrix catage_proj_m;
  param_matrix catage_proj_OFL_f;
  param_matrix catage_proj_OFL_m;
  param_vector pred_catch_proj_OFL_f;
  param_vector pred_catch_proj_OFL_m;
  param_stddev_vector spawn_biom_proj;
  param_stddev_vector tot_biom_proj;
  param_vector pred_catch_proj;
  param_vector pred_catch_proj_OFL;
  param_number stdev_rec;
  param_number FOFL;
  param_number FABC;
  param_number FOFL2;
  param_number FABC2;
public:
  virtual void userfunction(void);
  virtual void report(const dvector& gradients);
  virtual void final_calcs(void);
  model_parameters(int sz,int argc, char * argv[]);
  virtual void initializationfunction(void);
  void Get_Selectivity(void);
  void Get_Mortality_Rates(void);
  void Get_Numbers_At_Age(void);
  void Get_Catch_at_Age(void);
  void Get_Dependent_Vars(void);
  void Get_Predicted_Values(void);
  void compute_spr_rates(void);
  void Calc_priors(void);
  void Surv_Likelihood(void);
  void Multinomial_Likelihood(void);
 double round(double r);
  void Get_Population_Projection(void);
  void Evaluate_Objective_Function(void);
  void write_fullrep(void);
 double sdnr(const dvar_vector& pred,const dvector& obs,double m);

};
#endif
